---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      AWS_ACCESS_KEY: "ADD YOUR ACCESS KEY - GET IT FROM YOUR AWS ACCOUNT" 
      AWS_SECRET_KEY: "ADD YOUR SECRET KEY - GET IT FROM YOUR AWS ACCOUNT"      
      instance_type: t2.micro
      security_group: Ansible-WebServerDemo 
      image: ami-0cd3dfa4e37921605 
      keypair: ansible-webserver-demo # AWS Key
      region: us-east-2 # Region
      count: 1

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for Webserver Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: X.X.X.X/32         # SSH access retricted to the trusted IP address - x.x.x.x (add your ip address)
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: Assign elastic IP address to the Instance
        ec2_eip:
                device_id: "{{ item }}"
                region: us-east-2
        with_items: "{{ ec2.instance_ids }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: Webserver
